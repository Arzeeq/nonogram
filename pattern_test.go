package nonogram_test

import (
	"nonogram"
	"testing"

	"github.com/stretchr/testify/require"
)

func TestFillPattern(t *testing.T) {
	tests := []struct {
		name                   string
		n, m                   int
		grid                   []uint64
		expectedRowsPattern    nonogram.FillPattern
		expectedColumnsPattern nonogram.FillPattern
	}{
		{
			name: "1",
			n:    15,
			m:    15,
			grid: []uint64{18126011777271348540, 7528410091338765316, 8402197057205362570, 13226064227116690141},
			expectedRowsPattern: nonogram.FillPattern{
				{4, 1, 4},
				{3, 2, 1, 3},
				{2, 2, 1, 4},
				{1, 2, 3, 1},
				{4, 1, 1},
				{1, 1, 2, 2, 2},
				{1, 3, 1, 1},
				{1, 1, 1, 4},
				{1, 2, 1, 1},
				{6, 2, 3},
				{5, 3, 1, 1},
				{1, 2, 2, 1, 1, 1},
				{1, 1, 1, 3, 1, 1},
				{2, 2, 1, 1, 1, 1, 1},
				{1, 3, 1},
			},
			expectedColumnsPattern: nonogram.FillPattern{
				{1, 1, 1, 3},
				{1, 2, 2, 2},
				{2, 2, 1, 3},
				{2, 1, 6},
				{3, 2, 2, 2},
				{1, 2, 4, 1},
				{4, 1, 4},
				{2, 2, 3},
				{2, 2, 2, 2},
				{1, 1, 1, 1, 1},
				{4, 3, 1, 3},
				{1, 2, 3},
				{4, 1, 1, 5},
				{2, 1, 1},
				{1, 2, 1, 5},
			},
		},
		{
			name: "2",
			n:    15,
			m:    15,
			grid: []uint64{12406201998181418955, 6152752677888786430, 9294677792481399515, 11462630475436602264},
			expectedRowsPattern: nonogram.FillPattern{
				{2, 1, 5, 1},
				{2, 1, 1, 1},
				{1, 6, 3},
				{1, 3, 1, 1, 2},
				{1, 1, 10},
				{5, 1, 2},
				{4, 2, 5},
				{2, 4, 1, 2},
				{1, 1, 1, 1, 2, 2, 1},
				{1, 1, 1, 2, 1},
				{1, 1, 5, 1, 1},
				{1, 1, 1, 1, 1, 2},
				{4, 1},
				{2, 3, 2, 2},
				{1, 8, 2},
			},
			expectedColumnsPattern: nonogram.FillPattern{
				{1, 1, 5, 4},
				{1, 1, 4, 1, 2},
				{1, 2, 2, 1, 1},
				{1, 5, 1, 1, 1},
				{3, 1, 2, 2},
				{2, 1, 1, 3, 2},
				{1, 3, 2, 1, 2},
				{3, 3, 3, 1},
				{1, 3, 5, 1},
				{3, 1, 1, 2, 2},
				{1, 3, 1},
				{1, 3, 1, 2},
				{2, 1, 3, 1},
				{3, 2, 1, 1, 2},
				{1, 2, 1, 1, 2, 2},
			},
		},
		{
			name: "3",
			n:    15,
			m:    15,
			grid: []uint64{15726431156758262392, 525254584407315883, 18176564241434355577, 15672328899822000891},
			expectedRowsPattern: nonogram.FillPattern{
				{4, 1, 2},
				{2, 2, 2, 2},
				{1, 1, 3},
				{7, 1, 1},
				{1, 4, 1, 1, 2, 1},
				{1, 1, 5},
				{5, 1, 1},
				{1, 1, 1, 1, 1},
				{3, 1, 4},
				{3, 1, 2},
				{8, 6},
				{2, 1},
				{1, 8},
				{5, 1, 2, 1, 1},
				{5, 2, 1, 1},
			},
			expectedColumnsPattern: nonogram.FillPattern{
				{1, 1, 1, 1},
				{1, 7, 2},
				{1, 2, 1, 7},
				{2, 5, 2, 2},
				{1, 2, 1, 1, 2},
				{2, 2, 1, 1, 1},
				{4, 1, 2, 2},
				{4, 1, 1},
				{2, 1, 2, 4},
				{3, 2, 2, 3},
				{2, 1, 1, 2, 1},
				{1, 1, 1, 1},
				{2, 2, 1, 1, 1, 3},
				{2, 2, 1, 1},
				{2, 1, 1, 2},
			},
		},
		{
			name: "4",
			n:    15,
			m:    15,
			grid: []uint64{2480027743250341046, 505239571423399382, 6084678628392563524, 16993435646615490199},
			expectedRowsPattern: nonogram.FillPattern{
				{2, 2, 1, 3, 1},
				{1, 2, 2, 4},
				{4, 1, 1, 1},
				{2, 1, 1, 2, 1},
				{1, 2, 1, 3, 1},
				{1, 2, 1, 1, 1},
				{3, 1, 2, 2, 1},
				{5, 1},
				{3, 1, 1},
				{2, 10},
				{2, 4, 1, 2},
				{3, 4, 1},
				{3, 1, 1, 1, 3},
				{1, 1, 3, 1},
				{6, 5, 1},
			},
			expectedColumnsPattern: nonogram.FillPattern{
				{1, 2, 1, 2},
				{1, 3, 1, 7},
				{1, 2, 7, 1},
				{2, 1, 1},
				{4, 1, 1, 1, 2},
				{1, 4, 3, 1},
				{3, 1, 6},
				{1, 1, 3, 1},
				{1, 5, 2, 3},
				{1, 1, 1, 1},
				{1, 3, 3, 1, 1},
				{2, 1, 1, 1, 1, 1},
				{5, 1, 1, 1},
				{1, 2, 2, 1},
				{3, 1, 3, 3},
			},
		},
		{
			name: "5",
			n:    15,
			m:    15,
			grid: []uint64{7140370918507664044, 11714949411909096219, 17909581601399520992, 8983614276627273994},
			expectedRowsPattern: nonogram.FillPattern{
				{2, 1, 1, 1, 1, 1},
				{2, 2, 1, 1, 1},
				{2, 1, 2, 1},
				{1, 4, 1, 2},
				{2, 2, 2, 2},
				{1, 1, 2, 1, 1},
				{6, 1, 2},
				{3, 4, 1, 1},
				{1, 1, 1, 2},
				{1, 5, 1, 1},
				{1, 2, 1, 4, 1},
				{2, 3, 3, 1},
				{1, 5, 1},
				{1, 1, 2, 2},
				{5, 1, 3, 1},
			},
			expectedColumnsPattern: nonogram.FillPattern{
				{3, 2, 2},
				{2, 2, 2, 1},
				{1, 2, 2, 3, 1},
				{2, 1, 3, 4, 1},
				{4, 1, 1, 1},
				{1, 7, 1, 1},
				{1, 3, 3, 1},
				{1, 2, 3, 2},
				{1, 1, 1, 3},
				{1, 1, 1, 1, 3},
				{2, 4, 1},
				{1, 2, 3},
				{1, 4, 1, 1, 1},
				{1, 1, 2},
				{3, 1, 2, 2, 1},
			},
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			gram, err := nonogram.FromGrid(tt.n, tt.m, tt.grid)
			require.NoError(t, err)

			rows, columns := gram.FillPatterns()
			require.Equal(t, tt.expectedRowsPattern, rows)
			require.Equal(t, tt.expectedColumnsPattern, columns)
		})
	}
}
